---

- name: Install prerequisite packages
  apt:
    name: '{{ item }}'
    state: 'latest'
    update_cache: 'yes'
  with_items:
    - 'apt-transport-https'
    - 'ca-certificates'
    - 'curl'
    - 'software-properties-common'
    - 'jq'


- name: "Import GPG key"
  apt_key:
    url: "https://download.docker.com/linux/ubuntu/gpg"
    state: present


- name: "Add APT repository of Docker"
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    state: present
    update_cache: yes


- name: "Add Registry Mirror configuration"
  block:
  - name: "Create folder for keeping docker daemon configurations"
    file:
      path: "/etc/docker"
      state: "directory"

  - name: "Put configurations into remote folder"
    template:
      src: "templates/daemon.json"
      dest: "/etc/docker/daemon.json"
  when:
  - docker.registry_mirror is defined
  - docker.registry_mirror != ""


- name: "Install Docker CE"
  apt:
    name: 'docker-ce'
    state: 'latest'
    update_cache: 'yes'
  notify: restart docker.service
  when: docker.version == "latest"


- name: "Install Docker CE (user-specified version)"
  block:
  - name: "Get accurate version name of docker"
    shell: "apt-cache policy docker-ce | grep 17.03 | grep -v 'Installed' | sed 's/*//g' | head -n1 | awk '{print $1}'"
    register: docker_version
    failed_when: docker_version.stdout == ""
  
  - apt:
      name: 'docker-ce={{ docker_version.stdout }}'
      state: 'present'
      update_cache: 'yes'
    notify: restart docker.service
  when: docker.version != "latest"


- name: Add specific users into Docker group
  user:
    name: '{{ item }}'
    shell: /bin/bash
    groups: docker
    append: yes
  with_items: '{{ docker.users }}'
  when:
  - docker.users is defined
